# This testcase is part of GDB, the GNU debugger.
#
# Copyright 2015-2024 Free Software Foundation, Inc.
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

require target_supports_btrace allow_shlib_tests

standard_testfile

set basename_lib dlopen-dso
set srcfile_lib $srcdir/$subdir/$basename_lib.c
set binfile_lib [standard_output_file $basename_lib.so]

if { [gdb_compile_shlib $srcfile_lib $binfile_lib {}] != "" } {
    untested "failed to prepare shlib"
    return -1
}

if { [build_executable "failed to prepare" $testfile $srcfile \
	  [list additional_flags=-DDSO_NAME=\"$binfile_lib\" libs=-ldl]] } {
    return -1
}

foreach_with_prefix method {"bts" "pt"} {
    if { ![allow_btrace_tests $method] } {
	unsupported "target does not support record-btrace ${method}"
	continue
    }
    clean_restart "${testfile}"
    if ![runto_main] {
	continue
    }

    # Trace the test function
    #
    gdb_test_no_output "record btrace ${method}"
    gdb_test "next"

    # The memory containing the library call we traced is already gone.
    # Trace decode used to run into a SEGV after corrupting the cleanup chain.
    #
    # The test passes if we don't crash GDB.
    #
    gdb_test "info record"
}
