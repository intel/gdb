# This testcase is part of GDB, the GNU debugger.
#
# Copyright 2024 Free Software Foundation, Inc.
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

# Test UIRET and UINTR events.

require target_supports_btrace allow_btrace_event_trace_tests allow_btrace_uli_tests

set opts [list debug "additional_flags=-muintr -mgeneral-regs-only -minline-all-stringops"]

standard_testfile uli.c
if {[gdb_compile_pthreads "$srcdir/$subdir/$srcfile" "$binfile" executable $opts] != ""} {
    return -1
}
clean_restart $testfile

if ![runto_main] {
    untested "failed to run to main"
    return -1
}

set bp_1 [gdb_get_line_number "bp1"]

gdb_breakpoint $bp_1

gdb_test_no_output "set record function-call-history-size unlimited"
gdb_test_no_output "set record btrace pt event-tracing on"
gdb_test_no_output "record btrace pt"
gdb_continue_to_breakpoint "break at bp_1" ".*$srcfile:$bp_1.*"

# Test function call history.
# ui_handler can be preceded by any function depending on the scheduling.
gdb_test_sequence "record function-call-history" "function-call-history" {
    "\\\[uintr: vector = 0x\[0-9a-fA-F\]+( \\\(#\[a-z\]+\\\))?, ip = 0x\[0-9a-fA-F\]+\\\]"
    "\[0-9\]+\tui_handler"
    "\\\[uiret(: ip = 0x\[0-9a-fA-F\]+)?\\\]"
    "\[0-9\]+\tmain"
}
