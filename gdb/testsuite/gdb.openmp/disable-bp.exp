# Copyright 2019-2022 Free Software Foundation, Inc.

# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#
# Tests disabling a OpenMP kernel breakpoint after a hit.

load_lib openmp.exp

foreach extension $openmp_languages_list {
    set device_list [omp_get_device_list $extension]
    if {[llength $device_list] == 0} {
	unsupported "target does not support OpenMP ${extension}"
	continue
    }

    standard_testfile "parallel-for-1D.${extension}"
    set exe "${binfile}_${extension}"

    if {[prepare_openmp_for_testing ${exe} ${srcfile} $extension] == -1} {
	untested "OpenMP: Fail to prepare the test ${exe}"
	continue
    }

    foreach device_info "${device_list}" {
	with_test_prefix [init_openmp_device $device_info $extension] {

	    if {![start_openmp_program $extension]} {
		untested "Fail to start the program"
		continue
	    }

	    set last_line [gdb_get_line_number "kernel-last-line"]
	    gdb_breakpoint $last_line
	    set bpnum [get_integer_valueof "\$bpnum" 0 "get bpnum"]

	    # First, we should hit the breakpoint.  Any thread is fine.
	    gdb_continue_to_breakpoint "kernel" ".*$srcfile:$last_line.*"

	    # Disable and expect to run until completion.
	    gdb_test_no_output "disable $bpnum"

	    set kfail ""
	    if {[omp_is_level_zero_debug_api]} {
		set kfail "JIRA XDEPS/5062"
	    }
	    continue_openmp_program_to_termination "" "${kfail}"
	}
    }
}
