# Copyright 2023 Free Software Foundation, Inc.

# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#
# In this test we define a breakpoint at the header of a for-loop with
# a pragma.  The BP is hit by the host threads.  For each hit, we stop
# all targets, including the GPU.  We continue several times to test
# the resume and stop mechanisms work fine.

load_lib openmp.exp

set device_list [omp_get_device_list]
if {[llength ${device_list}] == 0} {
    unsupported "target does not support OpenMP"
    return 0
}

standard_testfile no-stack-call.cpp

if {[build_executable "failed to compile ${srcfile}" \
    ${binfile} ${srcfile} {openmp c++ debug}]} {
    return -1
}

foreach device_info "${device_list}" {
    openmp_with_intelgt_lock $device_info "cpp" {

	clean_restart ${binfile}
	if {![runto_main]} {
	    untested "Failed to run to main"
	    continue
	}

	set loop_header [gdb_get_line_number "second-for-header"]
	gdb_breakpoint $loop_header

	gdb_continue_to_breakpoint "for-loop" ".*${srcfile}:$loop_header.*"

	# Check that we can hit the BP multiple times.
	for {set i 1} {$i <= 10} {incr i} {
	    with_test_prefix "trip $i" {
		gdb_test_multiple "continue" "hit the BP or exit" {
		    -re -wrap "hit Breakpoint \[^\r\n\]+${srcfile}:$loop_header.*" {
			pass $gdb_test_name
		    }
		    -re -wrap "${inferior_exited_re} normally].*" {
			pass $gdb_test_name
			break
		    }
		}
	    }
	}
    }
}
