# Copyright 2019-2023 Free Software Foundation, Inc.

# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#
# Tests GDBs support for OpenMP, for a parallel_for kernel on a 2D range.

load_lib openmp.exp

set device_list [omp_get_device_list]
if {[llength ${device_list}] == 0} {
    unsupported "target does not support OpenMP"
    return 0
}

standard_testfile parallel-for-2D.f90

if {[build_executable "failed to compile ${srcfile}" \
    ${binfile} ${srcfile} {openmp f90 debug}]} {
    return -1
}

foreach device_info ${device_list} {
    with_test_prefix [string cat [init_openmp_device ${device_info}] ":f90"] {

	clean_restart ${binfile}
	if {![fortran_runto_main]} {
	    untested "Failed to run to main"
	    continue
	}

	set last_line [gdb_get_line_number "kernel-last-line"]
	gdb_breakpoint $last_line

	# Check that we hit the BP for a number of elements.  We do not check
	# for each element because the number of hits received may depend on
	# whether the kernel was vectorized, and if so, the width of vectors.
	# Since the data array in the test program is large, having a small
	# number of trips here should be safe.

	gdb_continue_to_breakpoint "hit the last line occurrence" \
	    ".*${srcfile}:${last_line}.*"
	gdb_test "ptype in_arr" "type \\\= INTEGER\\\*4 \\\(128,64\\\)"
	gdb_test "ptype out_arr" "type \\\= INTEGER\\\*4 \\\(64,128\\\)"
	gdb_test "print in_arr(1,1)" "123"
	gdb_test "print in_arr(1,2)" "124"
    }
}
