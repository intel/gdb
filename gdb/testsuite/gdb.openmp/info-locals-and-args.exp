# Copyright 2019-2022 Free Software Foundation, Inc.

# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#
# Tests GDBs OpenMP support for the "info locals" and "info args"
# commands inside a kernel.

load_lib openmp.exp

foreach extension $openmp_languages_list {
    set device_list [omp_get_device_list $extension]
    if {[llength $device_list] == 0} {
	unsupported "target does not support OpenMP ${extension}"
	continue
    }

    standard_testfile "call-stack.${extension}"
    set exe "${binfile}_${extension}"

    if {[prepare_openmp_for_testing ${exe} ${srcfile} $extension] == -1} {
	untested "OpenMP: Fail to prepare the test ${exe}"
	continue
    }

    foreach device_info "${device_list}" {
	with_test_prefix [init_openmp_device $device_info $extension] {

	    if {![start_openmp_program $extension]} {
		untested "Fail to start the program"
		continue
	    }

	    set ten_d1 [gdb_get_line_number "ten-d1" ${srcfile}]
	    set five_d1 [gdb_get_line_number "five-d1" ${srcfile}]
	    set fifteen_d1 [gdb_get_line_number "fifteen-d1" ${srcfile}]

	    set outer_loc [gdb_get_line_number "ordinary-outer-loc"]
	    set inner_loc [gdb_get_line_number "kernel-function-return"]
	    gdb_breakpoint "$outer_loc"
	    gdb_breakpoint "$inner_loc"

	    gdb_continue_to_breakpoint "bp 1" ".*$srcfile:$outer_loc.*"

	    gdb_test_multiple "info locals ten" "info locals ten" {
		-re -wrap "ten = 10\r\nten = (-)?$decimal\t<shadowed: decl at line $ten_d1>" {
		    pass $gdb_test_name
		}
		-re -wrap "ten = 10" {
		    pass $gdb_test_name
		}
	    }

	    gdb_test_multiple "info locals five" "info locals five" {
		-re -wrap "five = 5\r\nfive = (-)?$decimal\t<shadowed: decl at line $five_d1>" {
		    pass $gdb_test_name
		}
		-re -wrap "five = 5" {
		    pass $gdb_test_name
		}
	    }

	    gdb_test_multiple "info locals fifteen" "info locals fifteen" {
		-re -wrap "fifteen = 15\r\nfifteen = (-)?$decimal\t<shadowed: decl at line $fifteen_d1>" {
		    pass $gdb_test_name
		}
		-re -wrap "fifteen = 15" {
		    pass $gdb_test_name
		}
	    }

	    gdb_continue_to_breakpoint "bp 2" ".*$srcfile:$inner_loc.*"
	    gdb_test "info locals" "total = 180.*" "info locals 2"
	    if {$extension eq "f90"} {
		if {![info exists env(LIBOMPTARGET_DEVICETYPE)] || \
		    [require_openmp_device "GPU"]} {
		    setup_kfail "JIRA CMPLRLLVM/25254" "*-*-*"
		}
	    }
	    gdb_test "info args"  [multi_line \
		"num1 = 16" \
		"num2 = 3"]
	}
    }
}
