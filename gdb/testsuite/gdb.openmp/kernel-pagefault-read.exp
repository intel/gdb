# Copyright 2023 Free Software Foundation, Inc.

# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#
# Check read pagefault detection.

load_lib openmp.exp

standard_testfile .cpp

set device_list [omp_get_device_list]
if {[llength ${device_list}] == 0} {
    unsupported "target does not support OpenMP"
    return 0
}

if {[build_executable "failed to compile ${srcfile}" \
    ${binfile} ${srcfile} {openmp c++ debug}]} {
    return -1
}

foreach device_info "${device_list}" {
    openmp_with_intelgt_lock $device_info "cpp" {

	clean_restart ${binfile}
	if {![runto_main]} {
	    untested "Failed to run to main"
	    continue
	}

	gdb_test "continue" "signal SIGSEGV, Segmentation fault.*"

	clean_restart ${binfile}
	with_test_prefix "second" {
	    if {![runto_main]} {
		continue
	    }
	    set line [gdb_get_line_number "line-before-pagefault"]
	    gdb_breakpoint ${line} {temporary}
	    gdb_continue_to_breakpoint "line before pagefault" ".*${srcfile}:${line}.*"
	    gdb_test "continue" "signal SIGSEGV, Segmentation fault.*"
	}
    }
}
