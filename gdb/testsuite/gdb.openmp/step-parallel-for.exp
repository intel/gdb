# Copyright 2019-2023 Free Software Foundation, Inc.

# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#
# Tests GDBs support for OpenMP, for stepping inside a parallel_for kernel.

load_lib openmp.exp

foreach extension $openmp_languages_list {
    set device_list [omp_get_device_list $extension]
    if {[llength $device_list] == 0} {
	unsupported "target does not support OpenMP ${extension}"
	continue
    }

    standard_testfile "parallel-for-1D.${extension}"
    set exe "${binfile}_${extension}"

    if {[prepare_openmp_for_testing ${exe} ${srcfile} $extension] == -1} {
	untested "OpenMP: Fail to prepare the test ${exe}"
	continue
    }

    foreach device_info "${device_list}" {
	with_test_prefix [init_openmp_device $device_info $extension] {

	    if {![start_openmp_program $extension]} {
		untested "Fail to start the program"
		continue
	    }

	    set second_line [gdb_get_line_number "kernel-second-line"]
	    gdb_breakpoint $second_line

	    # Check that we can step inside the kernel.  We do not check
	    # for each element because the number of hits received may depend on
	    # whether the kernel was vectorized, and if so, the width of vectors.
	    # Since the data array in the test program is large, having a small
	    # number of trips here should be safe.
	    #
	    # Lock the scheduler for stepping to avoid inference.

	    gdb_test_no_output "set scheduler-locking step"

	    for {set j 1} {$j <= 5} {incr j} {
		if {$j > 1 && [require_openmp_device "CPU"]} {
		    setup_kfail "JIRA IGDB/3383" "*-*-*"
		}
		gdb_continue_to_breakpoint "hit the second line, occurrence $j" \
		    ".*$srcfile:$second_line.*"

		if {$j > 1 && [require_openmp_device "CPU"]} {
		    setup_kfail "JIRA IGDB/3383" "*-*-*"
		}
		gdb_test "next" "in_elem3 = .*" "next, occurrence $j:1"
		if {$j > 1 && [require_openmp_device "CPU"]} {
		    setup_kfail "JIRA IGDB/3383" "*-*-*"
		}
		gdb_test "next" "out_arr.* = in_elem.*" "next, occurrence $j:2"
	    }
	}
    }
}
