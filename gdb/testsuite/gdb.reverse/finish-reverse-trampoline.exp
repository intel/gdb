# Copyright 2024 Free Software Foundation, Inc.

# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

# Test "reverse-finish" command for functions with trampoline.

require supports_reverse allow_fortran_tests

if {![test_compiler_info {ifx-*} f90]} {
    untested "This test is only applicable for IFX, which emits the\
	trampoline DIE in Dwarf."
    return -1
}

load_lib fortran.exp

set testfile finish-reverse-trampoline
set srcfile "${srcdir}/gdb.fortran/func-trampoline.f90"
set binfile [standard_output_file $testfile]

if {[prepare_for_testing "failed to prepare" ${testfile} ${srcfile} \
    {debug f90}]} {
    return -1
}

if {![fortran_runto_main]} {
    return -1
}

set inner_loc [gdb_get_line_number "second-breakpt"]

if [supports_process_record] {
    # Activate process record/replay
    gdb_test_no_output "record" "turn on process record"
}

# Set breakpoint inside the innermost function 'second'.
gdb_breakpoint "$srcfile:$inner_loc"
gdb_continue_to_breakpoint "innermost-body" ".*$srcfile:$inner_loc.*"

gdb_test "reverse-finish" [multi_line \
    "Run back to call of #0  second \\(x=20, y=9\\).*" \
    ".*in first \\(num1=16, num2=3\\).*"]

gdb_test "frame" "#0.*first.*" "Frame 0 shows first function"
