# Copyright 2019-2024 Free Software Foundation, Inc.

# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#
# Tests GDBs support for SYCL, for accessing an element of 1D data
# using operator[].

load_lib sycl.exp

standard_testfile .cpp

set sycl_device_list [init_sycl_devices_list]
if {[llength $sycl_device_list] == 0} {
    unsupported "target does not support SYCL"
    return 0
}

if {[build_executable "failed to compile $srcfile" \
    "${binfile}" $srcfile {sycl debug}]} {
    return -1
}

foreach device $sycl_device_list {
    clean_restart "${binfile}"
    with_test_prefix [sycl_get_device_prefix $device] {
	if {![runto_main [sycl_get_device_args $device]]} {
	    continue
	}

	set line [gdb_get_line_number "kernel-line"]
	gdb_breakpoint $line {temporary}
	gdb_continue_to_breakpoint "1d" ".*$srcfile:$line.*"

	gdb_test "ptype input\[0\]" "type = int" "1D element type"
	gdb_test "print one == input\[0\]" "true" "1D access via size_t"
	gdb_test "print two == input\[id\]" "true" "1D access via id<1>"
	# A type of size_t is treated as a typedef inside GDB (as opposed to unsigned
	# long) which is a special case.  As size_t is returned by e.g. get_linear_id,
	# passing size_t as the argument of [] is natural and we test that our
	# xmethods script treats these typdefs appropriately.
	gdb_test "print two == input\[(size_t) id\]" "true" \
	    "1D access via id<1> cast to typedef"

	continue_sycl_program_to_termination
    }
}
