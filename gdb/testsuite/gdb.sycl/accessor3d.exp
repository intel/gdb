# Copyright 2019-2024 Free Software Foundation, Inc.

# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#
# Tests GDBs support for SYCL, for accessing an element of 3D data
# using operator[].

load_lib sycl.exp

standard_testfile .cpp

set sycl_device_list [init_sycl_devices_list]
if {[llength $sycl_device_list] == 0} {
    unsupported "target does not support SYCL"
    return 0
}

if {[build_executable "failed to compile $srcfile" \
    "${binfile}" $srcfile {sycl debug}]} {
    return -1
}

foreach device $sycl_device_list {
    clean_restart "${binfile}"
    with_test_prefix [sycl_get_device_prefix $device] {
	if {![runto_main [sycl_get_device_args $device]]} {
	    continue
	}

	set line [gdb_get_line_number "kernel-line"]
	gdb_breakpoint $line {temporary}
	gdb_continue_to_breakpoint "3d" ".*$srcfile:$line.*"

	gdb_test_exact "ptype input\[id\]" \
	    "type = struct user_type {\n    int x;\n}" "3D element type"
	gdb_test "print output\[id\].x == input\[id\].x" "true" \
	    "3D access via id<3>"
	gdb_test "print input\[0\]" \
	    " = \\{\\{\\{x = 1\\}, \\{x = 2\\}\\}, \\{\\{x = 3\\}, \\{x = 4\\}\\}\\}" \
	    "3D access via size_t"

	continue_sycl_program_to_termination
    }
}
