# Copyright 2021-2023 Free Software Foundation, Inc.

# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#
# Tests GDBs support for SYCL when there are function calls inside
# the kernel submitted with parallel_for_work_group.

load_lib sycl.exp

standard_testfile .cpp

# A generic function name is used to call it from the SYCL library.
proc "sycl_${gdb_test_file_name}_run_tests" {} {
    global srcfile

    if {[start_sycl_program] < 0} {
	return -1
    }

    set fill "\[^\r\n\]*"
    set inner_loc [gdb_get_line_number "work-item-location"]
    gdb_breakpoint "$srcfile:$inner_loc"
    gdb_continue_to_breakpoint "work-item-location" ".*$srcfile:$inner_loc.*"
    gdb_test "backtrace 4" [multi_line \
			    "#0${fill}main${fill}operator\\(\\)${fill} at ${fill}" \
			    "#1${fill} at ${fill}" \
			    "#2${fill} at ${fill}" \
			    "#3${fill}(\r\n\\(More stack frames follow\\.\\.\\.\\))?${fill}"] \
    "backtrace in parallel_for_work_item"
}

test_initialize
