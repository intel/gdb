# Copyright 2019-2022 Free Software Foundation, Inc.

# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#
# Tests GDBs support for SYCL, for making infcalls inside a
# parallel_for kernel.

load_lib sycl.exp

standard_testfile parallel-for-1D.cpp

set sycl_device_list [init_sycl_devices_list]
if {[llength $sycl_device_list] == 0} {
    unsupported "target does not support SYCL"
    return 0
}

if {[build_executable "failed to compile $srcfile" \
    "${binfile}" $srcfile {sycl debug}]} {
    return -1
}

foreach device $sycl_device_list {
    clean_restart "${binfile}"
    sycl_with_intelgt_lock $device {

	if {![runto_main [sycl_get_device_args $device]]} {
	    continue
	}

	set last_line [gdb_get_line_number "kernel-last-line"]
	gdb_breakpoint $last_line

	# Check that we can make an infcall from different threads.

	for {set i 1} {$i <= 4} {incr i} {
	    gdb_continue_to_breakpoint "hit the last line, trip $i" \
		".*$srcfile:$last_line.*"

	    gdb_test "print get_dim\(wiID, 0\) == dim0" "true" \
		"thread invariant, trip $i"
	}
    }
}
