# Copyright 2019-2023 Free Software Foundation, Inc.

# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#
# Tests GDBs support for making infcalls on SYCL kernel functions.

load_lib sycl.exp

standard_testfile call-stack.cpp

set sycl_device_list [init_sycl_devices_list]
if {[llength $sycl_device_list] == 0} {
    unsupported "target does not support SYCL"
    return 0
}

if {[build_executable "failed to compile $srcfile" \
    "${binfile}" $srcfile {sycl debug}]} {
    return -1
}

foreach device $sycl_device_list {
    clean_restart "${binfile}"
    sycl_with_intelgt_lock $device {
	if {![runto_main [sycl_get_device_args $device]]} {
	    continue
	}

	# Define a breakpoint inside the kernel and outside the kernel.
	# Make infcalls on user-defined functions in both breakpoint
	# locations.
	set inside [gdb_get_line_number "ordinary-outer-loc"]
	set outside [gdb_get_line_number "end-of-program"]
	gdb_breakpoint $inside
	gdb_breakpoint $outside

	gdb_continue_to_breakpoint "inside" ".*$srcfile:$inside.*"
	gdb_test "print second(3, 4)" "= 528" "infcall inside kernel"

	gdb_continue_to_breakpoint "outside" ".*$srcfile:$outside.*"
	gdb_test "print second(5, 7)" "= 1005" "infcall outside kernel"
    }
}
