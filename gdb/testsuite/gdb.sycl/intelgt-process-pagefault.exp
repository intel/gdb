# Copyright 2024 Free Software Foundation, Inc.

# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#
# Tests generic, process-level pagefault events for the Intel GT target.
#
# In the input program, a GPU thread causes a write-pagefault and exits
# immediately, so that the pagefault cannot be associated to a thread.

load_lib sycl.exp

standard_testfile .cpp

set sycl_device_list [init_sycl_devices_list]
if {[llength $sycl_device_list] == 0} {
    unsupported "target does not support SYCL"
    return 0
}

# With -O0, the graphics compiler may insert a tile fence at the end
# of the kernel that would force the pagefaulting thread to wait for
# the write request to go through.  We do not want this; we want the
# thread to go ahead and terminate.  Use -O2 explicitly.

if {[build_executable "failed to compile $srcfile" \
    "${binfile}" $srcfile {sycl debug "optimize=-O2"}]} {
    return -1
}

foreach device $sycl_device_list {
    clean_restart "${binfile}"
    with_test_prefix [sycl_get_device_prefix $device] {
	if {![require_sycl_device "$device" "gpu" "Intel*"]} {
	    unsupported "test is aimed at Intel GPUs only"
	    continue
	}

	if {![is_pvc $device]} {
	    unsupported "pagefault feature is not available on this device"
	    continue
	}

	if {![sycl_start $device]} {
	    continue
	}

	setup_kfail "JIRA GSD/9128" "*-*-*"
	gdb_test "continue" \
	    "Program terminated with signal SIGSEGV, Segmentation fault.*"
    }
}
