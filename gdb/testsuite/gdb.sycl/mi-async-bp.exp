# Copyright 2022-2023 Free Software Foundation, Inc.

# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#
# Tests basic MI flow for a SYCL program: hit a temporary BP inside
# kernel and continue till termination.

load_lib sycl.exp
load_lib mi-support.exp

standard_testfile parallel-for-1D.cpp

set MIFLAGS "-i=mi"

# A generic function name is used to call it from the SYCL library.
proc "sycl_${gdb_test_file_name}_run_tests" {} {
    global binfile MIFLAGS

    # Run a simple flow for both sync and async MI modes:
    # we hit a breakpoint inside the kernel and continue to end.
    foreach_with_prefix async {"off" "on"} {
	mi_clean_restart $binfile

	mi_gdb_test "-gdb-set mi-async $async" ".*done.*" "set async $async"
	mi_detect_async

	if {$async == "on"} {
	    set kfail "JIRA DOQG/3265"
	} else {
	    set kfail ""
	}
	if {[mi_start_sycl_program $kfail] < 0} {
	    return -1
	}

	# Run till a temporary BP inside a kernel.
	set first_kernel_line [gdb_get_line_number "kernel-first-line"]
	set continue_test "Continue to 'kernel_first_line' and stop at breakpoint"
	set hit_line [mi_continue_to_line $first_kernel_line $continue_test $kfail]
	if {$hit_line == $first_kernel_line} {
	    pass "$continue_test"
	} else {
	    fail "$continue_test"
	}
	# Send resuming command.
	mi_send_resuming_command "exec-continue" "continuing to inferior exit" $kfail
	# Expect normal exit.
	mi_expect_stop "exited-normally" "" "" "" "" "" "exit normally" $kfail
    }
}

test_initialize
