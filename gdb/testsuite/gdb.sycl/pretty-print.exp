# Copyright 2019-2022 Free Software Foundation, Inc.

# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#
# Tests SYCL pretty printers.

load_lib sycl.exp

standard_testfile .cpp

# A generic function name is used to call it from the SYCL library.
proc "sycl_${gdb_test_file_name}_run_tests" {} {
    global srcfile

    if {[start_sycl_program] < 0} {
	return -1
    }

    if {[gdb_test "info pretty-printer global SYCL" ".*SYCL.*"]} {
    	return -1
    }

    set bp_line [gdb_get_line_number "end-of-program"]
    gdb_breakpoint "$bp_line"
    gdb_continue_to_breakpoint "end-of-program" ".*$srcfile:$bp_line.*"

    set namespace_version [get_sycl_header_version]
    if {$namespace_version == 0} {
	xfail "Test remaining steps are not supported for compiler {[test_compiler_info]}"
    } else {
	gdb_test "print id_1D" "sycl::_V${namespace_version}::id<1> = \\{11\\}"
	gdb_test "print id_2D" \
	    "sycl::_V${namespace_version}::id<2> = \\{11, 22\\}"
	gdb_test "print id_3D" \
	    "sycl::_V${namespace_version}::id<3> = \\{11, 22, 33\\}"

	gdb_test "print range_1D" \
	    "sycl::_V${namespace_version}::range<1> = \\{3\\}"
	gdb_test "print range_2D" \
	    "sycl::_V${namespace_version}::range<2> = \\{3, 2\\}"
	gdb_test "print range_3D" \
	    "sycl::_V${namespace_version}::range<3> = \\{3, 2, 2\\}"

	gdb_test "print buffer_1D" \
	    "sycl::_V${namespace_version}::buffer<int, 1> = \\{impl=0x.*\\}"
	gdb_test "print buffer_2D" \
	    "sycl::_V${namespace_version}::buffer<int, 2> = \\{impl=0x.*\\}"
	gdb_test "print buffer_3D" \
	    "sycl::_V${namespace_version}::buffer<int, 3> = \\{impl=0x.*\\}"
    }
}

test_initialize
