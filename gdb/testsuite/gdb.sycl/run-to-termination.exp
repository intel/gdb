# Copyright 2019-2022 Free Software Foundation, Inc.

# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#
# Tests GDB's support for SYCL.  This is the simplest scenario where a
# program is run to completion without any breakpoints.

load_lib sycl.exp

standard_testfile single-task.cpp

set sycl_device_list [init_sycl_devices_list]
if {[llength $sycl_device_list] == 0} {
    unsupported "target does not support SYCL"
    return 0
}

if {[build_executable "failed to compile $srcfile" \
    "${binfile}" $srcfile {sycl debug}]} {
    return -1
}

foreach device $sycl_device_list {
    clean_restart "${binfile}"
    with_test_prefix [sycl_get_device_prefix $device] {
	with_test_prefix "first" {
	    if {![runto_main [sycl_get_device_args $device]]} {
		continue
	    }

	    continue_sycl_program_to_termination "1"
	}

	# Now test re-running.

	with_test_prefix "second" {
	    if {![runto_main [sycl_get_device_args $device]]} {
		continue
	    }

	    # We should be able to run to the end.
	    continue_sycl_program_to_termination "2"
	}
    }
}
