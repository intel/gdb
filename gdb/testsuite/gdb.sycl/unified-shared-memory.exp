# Copyright 2020-2023 Free Software Foundation, Inc.

# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#
# Tests GDBs support for the unified shared memory support in SYCL.

load_lib sycl.exp

standard_testfile .cpp

# A generic function name is used to call it from the SYCL library.
proc "sycl_${gdb_test_file_name}_run_tests" {} {
    global srcfile

    if {[start_sycl_program] < 0} {
	return -1
    }

    set last_line [gdb_get_line_number "kernel-last-line"]
    gdb_breakpoint $last_line

    gdb_continue_to_breakpoint "hit the last line" ".*$srcfile:$last_line.*"

    # Access the array from inside the kernel.
    with_test_prefix "inside" {
	gdb_test "print in\[0\]"   "= 123"
	gdb_test "print out\[0\]"  "= 123"
	gdb_test "print in\[20\]"  "= 143"
    }

    delete_breakpoints

    set end_marker [gdb_get_line_number "end-marker"]
    gdb_breakpoint $end_marker

    set sigsegv_count 0

    gdb_test_multiple "continue" "hit the end marker" {
	-re -wrap "Breakpoint .*$srcfile:$end_marker.*" {
	    pass $gdb_test_name
	}
	-re -wrap "signal SIGSEGV, Segmentation fault.*" {
	    # The GPU runtime uses SIGSEGV to migrate data between the
	    # device and host on some platforms.  Just pass the signal
	    # back to the host.  Account no more than 10 instances of SIGSEGV.
	    incr sigsegv_count
	    if {$sigsegv_count > 10} {
		fail $gdb_test_name
	    } else {
		send_gdb "signal SIGSEGV\n"
		exp_continue
	    }
	}
    }

    # Access the array from the host.
    with_test_prefix "outside" {
	gdb_test "print in\[0\]"   "= 123"
	gdb_test "print out\[0\]"  "= 223"
	gdb_test "print in\[20\]"  "= 143"
	gdb_test "print out\[20\]" "= 243"
    }
}

test_initialize
